name: code check

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  安全检查:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 安装 pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
      
    - name: 设置 Node.js 环境
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: 安装依赖
      run: pnpm install
      
    - name: 检查已知漏洞 (pnpm audit)
      run: pnpm audit
      
    - name: 检查敏感信息
      run: |
        # 检查是否意外提交了敏感信息
        if grep -r "password\s*=\s*['\"]" themes/; then
          echo "::error::检测到可能的密码泄露"
          exit 1
        fi
        
        if grep -r "token\s*=\s*['\"]" themes/; then
          echo "::error::检测到可能的令牌泄露"
          exit 1
        fi
        
        if grep -r "api_key\s*=\s*['\"]" themes/; then
          echo "::error::检测到可能的API密钥泄露"
          exit 1
        fi
        
    - name: 检查不安全的代码模式
      run: |
        # 检查已知的不安全代码模式
        if grep -r "eval(" themes/; then
          echo "::warning::检测到eval使用，可能存在安全风险"
        fi
        
        if grep -r "innerHTML\s*=" themes/; then
          echo "::warning::检测到innerHTML使用，可能存在XSS风险"
        fi
        
    - name: 检查过期依赖
      run: pnpm outdated
      
    - name: 静态代码分析 (可选)
      uses: github/codeql-action/analyze@v2
      with:
        languages: javascript
        
    - name: 运行 Hexo 生成测试
      run: |
        pnpm install -g hexo-cli
        hexo generate --debug